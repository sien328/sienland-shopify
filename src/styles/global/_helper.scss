@mixin font-family-import($fileName,$hash) { 
    
    @if $isUsingWebpack {
        $fontPath: '../styles/fonts/Roboto/';
    } @else {
        $fontPath: '';
    }
    
    @if $hash {
        @font-face {
            font-family: $fileName;
            src: url('#{$fontPath}#{$fileName}.ttf?#{$hash}') format('truetype'); // Safari, Android, iOS
            //    url('#{$fontPath}#{$fileName}.woff?#{$hash}') format('woff'), // Pretty Modern Browsers
            //    url('#{$fontPath}#{$fileName}.svg?#{$hash}##{$fileName}') format('svg'); // Legacy iOS
            font-weight: normal;
            font-style: normal;
        }
    } @else {
        @font-face {
            font-family: $fileName;
            src: url('#{$fontPath}#{$fileName}.ttf') format('truetype'); // Safari, Android, iOS
            //    url('#{$fontPath}#{$fileName}.woff') format('woff'), // Pretty Modern Browsers
            //    url('#{$fontPath}#{$fileName}.svg') format('svg'); // Legacy iOS
            font-weight: normal;
            font-style: normal;
        }
    }
}


@mixin mediaQuery($constraint, $viewport1, $viewport2: null) {
    @if $constraint == $min {
        @media screen and ($min: $viewport1) {
            @content;
        }
    } @else 
    if $constraint == $max {
        @media screen and ($max: $viewport1) {
            @content;
        }
    } @else {
        @media screen and ($min: $viewport1) and ($max: $viewport2) {
            @content;
        }
    }
}

@mixin query-small {
    @include mediaQuery($max, ($mediumScreen - 1)) {
        @content;
    }
}
@mixin query-medium-down {
    @include mediaQuery($max, ($largeScreen - 1)) {
        @content;
    }
}
@mixin query-medium {
    @include mediaQuery(null, $mediumScreen, ($largeScreen - 1)) {
        @content;
    }
}
@mixin query-medium-up {
    @include mediaQuery($min, $mediumScreen) {
        @content;
    }
}
@mixin query-large-up {
    @include mediaQuery($min, $largeScreen) {
        @content;
    }
}
@mixin query-large {
    @include mediaQuery(null, $largeScreen, $xLargeScreen) {
        @content;
    }
}
@mixin query-xlarge-up {
    @include mediaQuery($min, $xLargeScreen) {
        @content;
    }
}